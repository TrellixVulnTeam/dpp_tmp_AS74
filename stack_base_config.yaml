
#Apply via: ansible-playbook -i ./inventory.yaml --become stack_base_config.yaml

#---------------------------------------------------------------

# - name: Create empty array
#   tasks:
#     set_fact:
#       reachable: []

# - name: Check host connectivity
#   hosts: stack
#   gather_facts: no
#   vars:
#     no_ssh: []
  
#   tasks:
#     - meta: clear_host_errors
#     - command: ping -c1 {{ inventory_hostname }}
#       delegate_to: localhost
#       register: ping_result
#       ignore_errors: yes

#     - debug: var=inventory_hostname
#       when: ping_result.failed

#     - set_fact: 
#         no_ssh: "{{no_ssh + [inventory_hostname]}}"
#       when: ping_result.failed

#     - debug: var=no_ssh
    # - set_fact:
    #     ansible_factsreachable: "{{reachable + [inventory_hostname]}}"
    #   when: ping_result.failed == True
    # - debug: var=reachable
    
- name: General OS Config 
  hosts: stack
  gather_facts: yes
  vars_prompt:
    - name: firewall_disable
      prompt: "Disable software firewall on all stack hosts? (yes/no)"
      private: no
      default: 'no'
    - name: satellite_register
      prompt: "Register hosts in Satellite? (yes/no)"
      private: no
      default: 'no'
    - name: satellite_reg_usr
      prompt: "Satellite Admin User"
      private: no
      default: 'admin'
      when: satellite_register == 'yes'
    - name: satellite_reg_pwd
      prompt: "Satellite Admin Password"
      private: yes
      when: satellite_register == 'yes'


  tasks:
    #- name: Check host connectivity
    #  shell: ssh {{ansible_usr}}@{{ inventory_hostname }} "echo 'success'"
    #  register: scm_enabled 
    #- debug: 
    #    msg: "{{ ansible_facts.nodename }}"

    - name: Stop and disable firewalld.
      service:
        name: firewalld
        state: stopped
        enabled: False
      ignore_errors: yes
      when: firewall_disable == 'yes'

    - name: Set Timezone
      command: timedatectl set-timezone Europe/Berlin

    #- name: upgrade all packages
    #  yum: name=* state=latest

    - name: Set local hostnames
      hostname:
        name: "{{inventory_hostname}}"

    - name: Create hosts file from J2 Template
      template:
        src: ./conf_templates/hosts.template
        dest: /etc/hosts

    - name: Disallow ssh password authentication
      lineinfile: dest=/etc/ssh/sshd_config
        regexp="^PasswordAuthentication"
        line="PasswordAuthentication no"
        state=present

    - name: Restart ssh server
      service: 
        name: sshd
        state: restarted

    - name: Copy local yum repo config template and move existing conf files
      block:
        - file:
            path: "/home/{{ansible_usr}}/bu"
            state: directory
        - shell: "mv /etc/yum.repos.d/*.repo /home/{{ansible_usr}}/bu/"
        - template: 
            src: "./conf_templates/local.repo.template"
            dest: "/etc/yum.repos.d/local.repo"
    
    - name: Register hosts in Satellite Org 
      block:
        - get_url:
            url: "https://satellite.dpp.dev/pub/{{satellite_katello_consumer}}"
            dest: "{{upload_target}}/{{satellite_katello_consumer}}"
            validate_certs: no
        - yum:
            name: "{{upload_target}}/{{satellite_katello_consumer}}"
            state: present
            disable_gpg_check : yes
        - shell: 'subscription-manager register --org="{{satellite_org}}" --environment="{{satellite_env}}" --username="{{satellite_reg_usr}}" --password="{{satellite_reg_pwd}}"'
      when: satellite_register == 'yes'
        
#---------------------------------------------------------------
